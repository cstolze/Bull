Axiom exp : Type.

Axiom lam : exp -> (exp -> exp) -> exp.
Axiom arr : exp -> (exp -> exp) -> exp.
Definition ar' t1 t2 := arr t1 (fun x => t2).
Axiom app : exp -> exp -> exp.
Axiom star : exp.
Axiom squr : exp.

Axiom nat : exp.
Axiom o : exp.
Axiom s : exp.

Axiom list : exp.
Axiom nil : exp.
Axiom cons : exp.

Axiom even : exp.
Axiom even_o : exp.
Axiom even_ss : exp.

Axiom eq : exp -> exp -> Type.
Axiom eq_refl : forall e, eq e e.

Axiom stl : exp -> exp -> Type.
Axiom oml : exp -> exp -> Type.
Axiom lfl : exp -> exp -> Type.

Axiom lam_rule :
      forall e t1 t2,
      	     (stl (arr t1 t2) star -> (forall x, stl x t1 -> stl (e x) (t2 x)) -> stl (lam t1 e) (arr t1 t2)) &
       	     (oml (arr t1 t2) star -> (forall x, oml x t1 -> oml (e x) (t2 x)) -> oml (lam t1 e) (arr t1 t2)) &
       	     (lfl (arr t1 t2) star -> (forall x, lfl x t1 -> stl (e x) (t2 x)) -> lfl (lam t1 e) (arr t1 t2)).

Axiom arr_rule :
      forall t1 t2,
      	     (stl t1 star -> (forall x, stl x t1 -> stl (t2 x) star) -> stl (arr t1 t2) star) &
      	     ((oml t1 star | oml t1 squr) -> (forall x, oml x t1 -> oml (t2 x) star) -> oml (arr t1 t2) star) &
             (oml t1 squr -> (forall x, oml x t1 -> oml (t2 x) squr) -> oml (arr t1 t2) squr) &
             (lfl t1 star -> (forall x, lfl x t1 -> lfl (t2 x) star) -> lfl (arr t1 t2) star) &
             (lfl t1 star -> (forall x, lfl x t1 -> lfl (t2 x) squr) -> lfl (arr t1 t2) squr).

Axiom app_rule :
      forall e1 e2 t1 t2,
      	     (stl e1 (arr t1 t2) -> stl e2 t1 -> stl (app e1 e2) (t2 e2)) &
      	     (oml e1 (arr t1 t2) -> oml e2 t1 -> oml (app e1 e2) (t2 e2)) &
      	     (lfl e1 (arr t1 t2) -> lfl e2 t1 -> lfl (app e1 e2) (t2 e2)).

Axiom star_rule :
      stl star squr & oml star squr & lfl star squr.

Axiom nat_rule :
      stl nat star & oml nat star & lfl nat squr.
Axiom o_rule :
      stl o nat & oml o nat & lfl o nat.
Axiom s_rule :
      stl s (ar' nat nat) & oml s (ar' nat nat) & oml s (ar' nat nat).

Axiom list_rule :
      oml list (ar' star star).
Axiom nil_rule :
      oml nil (arr star (fun t => app list t)).
Axiom cons_rule :
      oml cons (arr star (fun t => ar' t (ar' (app list t) (app list t)))).

Axiom even_rule :
      lfl even (ar' nat star).
Axiom even_o_rule :
      lfl even_o (app even o).
Axiom even_ss_rule :
      lfl even_ss (arr nat (fun n => ar' (app even n) (app even (app s (app s n))))).